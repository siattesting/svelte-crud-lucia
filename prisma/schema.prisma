generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model auth_user {
  id           String         @id @unique
  username     String         @unique
  posts        post[]
  todos        todo[]
  transactions transaction[]
  key          user_key[]
  auth_session user_session[]
}

model user_session {
  id             String    @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           auth_user @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
}

model user_key {
  id              String    @id @unique
  hashed_password String?
  user_id         String
  account         auth_user @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
}

model post {
  id        String    @id @unique
  title     String
  content   String?
  published Boolean   @default(false)
  createdAt DateTime  @default(now()) @db.Timestamp(6)
  author_id String
  tagId     String?
  user      auth_user @relation(fields: [author_id], references: [id], onDelete: Cascade)
  tag       tag?      @relation(fields: [tagId], references: [id])
}

model tag {
  id    String @unique
  name  String
  posts post[]
}

model transaction {
  id             String         @unique
  authorId       String
  createdAt      DateTime       @default(now()) @db.Timestamp(6)
  amount         Float
  trans_category trans_category @default(OUTFLOW)
  partnerId      String
  content        String
  title          String
  author         auth_user      @relation(fields: [authorId], references: [id])
  partner        partner        @relation(fields: [partnerId], references: [id])
}

model partner {
  id           String        @unique
  title        String        @unique
  content      String?
  transactions transaction[]
}

model todo {
  id        String    @unique
  title     String
  completed Boolean
  createdAt DateTime  @default(now()) @db.Timestamp(6)
  authorId  String
  author    auth_user @relation(fields: [authorId], references: [id])
}

enum trans_category {
  INFLOW
  OUTFLOW
}
