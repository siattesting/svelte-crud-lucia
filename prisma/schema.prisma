// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model auth_user {
  id       String @id @unique
  username String @unique

  auth_session user_session[]
  key          user_key[]
  posts        post[]
  transaction  transaction[]
  todos todo[]
}

model user_session {
  id             String @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           auth_user   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model user_key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  account         auth_user    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model post {
  id        String   @id @unique
  title     String
  content   String?
  published Boolean  @default(false)
  createdAt DateTime @default(now()) @db.Timestamp(6)
  author_id String
  user      auth_user     @relation(references: [id], fields: [author_id], onDelete: Cascade)
  tag       tag?     @relation(fields: [tagId], references: [id])
  tagId     String?
}

model tag {
  id    String @unique
  name  String
  posts post[]
}

enum trans_category {
  INFLOW
  OUTFLOW
}

model transaction {
  id String @unique
  title String
  content String
  author auth_user @relation(fields: [authorId], references: [id] )
  authorId String
  createdAt DateTime @default(now()) @db.Timestamp(6)
  amount Float
  trans_category trans_category @default(OUTFLOW)
  partnerId String
  partner partner @relation(fields: [partnerId], references: [id] )  
}

model partner {
  id String @unique
  title String
  content String?
  transactions transaction[]
}

model todo {
  id String @unique
  title String
  completed Boolean
  author auth_user @relation(fields: [authorId], references: [id] )
  authorId String
  createdAt DateTime @default(now()) @db.Timestamp(6)

}
